apiVersion: v1
kind: Service
metadata:
  name: local-api-svc
spec:
  type: NodePort
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 8080
  selector:
    app: local-api-pod

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: local-api-deploy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: local-api-pod
  template:
    metadata:
      labels:
        app: local-api-pod
    spec:
      volumes:
        - name: src
          hostPath:
            path: /Users/krainneun/Development/OSS/k8s-elixir/server
            type: DirectoryOrCreate
      containers:
        - name: local-api-container
          image: k8s-back-end-image
          imagePullPolicy: IfNotPresent
          env:
            - name: DB_HOST
              value: local-postgres-svc
            - name: DB_PORT
              value: "15432"
            - name: DB_USER
              value: postgres
            - name: DB_DATEBASE
              value: share_truck_dev
            - name: DB_PASSWORD
              value: postgres
            - name: PORT
              value: "8080"
          ports:
            - containerPort: 8080
          volumeMounts:
            - mountPath: /app
              name: src
          workingDir: /app
          command:
            - sh
            - -c
            - "mix deps.get && mix ecto.create && mix phx.server"
          # â–² unUseProduction
#          readinessProbe:
#            httpGet:
#              port: 8080
#              path: /api/health-check
#            timeoutSeconds: 60
